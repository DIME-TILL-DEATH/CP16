Index: include/FreeRTOSConfig.h
===================================================================
--- include/FreeRTOSConfig.h	(revision 6767)
+++ include/FreeRTOSConfig.h	(revision 7321)
@@ -8,8 +8,9 @@
       #ifdef __cplusplus
 	extern "C" {
       #endif
-	    unsigned long GetCpuClock(void) ;
+	      unsigned long GetCpuClock(void) ;
            // #define sprintf ksprintf
+	      TickType_t GetRunTimeStatsClock();
       #ifdef __cplusplus
            }
       #endif
Index: options.mk
===================================================================
--- options.mk	(revision 6767)
+++ options.mk	(revision 7321)
@@ -4,9 +4,9 @@
 
 PLATFORM=PANGEA_MINI
 DEV_DESCRIPTION=\"cp16_module\"
-PROJECT_DESCRIPTION=\"cp16\"
-FIRMWARE_NAME="CP16."
-FIRMWARE_VER="1.04.00"
+PROJECT_DESCRIPTION=\"cp16rv\"
+FIRMWARE_NAME="CP16.RV.LA3."
+FIRMWARE_VER="1.05.02"
 
 PLL_N=336	
 PLL_Q=7
@@ -22,7 +22,7 @@
 # set a RAM vector table define
 RAM_VEC_TABLE=0
 # add project specific hardware defines
-HARDWARE_DEFS+= -DRAM_VEC_TABLE=$(RAM_VEC_TABLE)  -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_OTG_MODE -D__PANGEA_MINI_REV2__
+HARDWARE_DEFS+= -DRAM_VEC_TABLE=$(RAM_VEC_TABLE)  -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_OTG_MODE -D__PANGEA_MINI_REV2__ -D__LA3_MOD__
 
 # set a FreeRTOS defines
 TICK_RATE_HZ_DEFAULT=1000UL
Index: application/main.cc
===================================================================
--- application/main.cc	(revision 6767)
+++ application/main.cc	(revision 7321)
@@ -12,6 +12,7 @@
 #include "usb_bsp.h"
 #include "debug_led.h"
 #include "ff.h"
+#include "init.h"
 
 volatile uint8_t usb_type = 0;
 volatile uint32_t sysclock ;
Index: application/usb.cc
===================================================================
--- application/usb.cc	(revision 6767)
+++ application/usb.cc	(revision 7321)
@@ -131,6 +131,20 @@
         }while(1) ;
 }
 
+size_t cdc_recv_line (emb_string& dest)
+{
+        dest.clear() ;
+        int c ;
+        do
+        {
+        	char tmp ;
+        	ConsoleTask->ReadFromInputBuff(&tmp) ;
+                c = tmp ;
+                if ( c == '\n' or c == '\r' ) return dest.length() ;
+                else dest.push_back(c);
+        }while(1) ;
+}
+
 size_t cdc_recv_buf (char* buf , size_t size)
 {
         size_t c = 0 ;
@@ -169,6 +183,7 @@
 
     .send_string = cdc_send_string,
     .recv_string = cdc_recv_string,
+	.recv_line   = cdc_recv_line,
 
     .send_buf = cdc_send_buf,
     .recv_buf = cdc_recv_buf,
Index: application/eepr.cc
===================================================================
--- application/eepr.cc	(revision 6767)
+++ application/eepr.cc	(revision 7321)
@@ -80,7 +80,8 @@
 			  res = f_readdir(&dir, &fno);                   /* Read a directory item */
 			  if (res != FR_OK || fno.fname[0] == 0)
 			  {
-				  return false ;  /* Break on error or end of dir */
+				  result = false ;  /* Break on error or end of dir */
+				  break ;
 			  }
 
        	      #if _USE_LFN
@@ -376,8 +377,11 @@
 	              i2hex( (i << 4) | y , hex);
 	              msg_console("%s\n" , hex ) ; // вывод индекса пресета
 	           }
+
+
 	        	  result = dir_get_wav( dir_name,  file_name ) ;
 
+
 	        	  if (!result)
 	        	  {
 	        		  if ( interface2 )  msg_console("\t") ;
@@ -413,6 +417,7 @@
 	        msg_console("END\n") ;
 
 	         f_mount(0, "0:", 0);
+
 	         return result ;
 }
 
@@ -709,6 +714,14 @@
 	   }
 	  res = f_open(&file, "/system.pan" , FA_READ | FA_WRITE | FA_OPEN_ALWAYS) ;
 	  f_read(&file, sys_para , 32 , &f_size);
+	  if( f_size(&file) == 32 ) // запись map0, map1 по умолчанию
+	     {
+		   size_t fsize ;
+		   f_lseek (&file , 32);
+		   uint16_t map =0x1122 ;
+		   f_write(&file, &map , 2 , &fsize);
+		   f_sync(&file);
+	     }
 	  f_close(&file);
 	  f_mount(0, "0:", 0);
 }
@@ -1051,7 +1064,7 @@
 }
 
 
-void console_dir_wavs_remove(const emb_string& dir_name )
+void console_dir_remove_wavs(const emb_string& dir_name )
 {
 	  FATFS fs;
 	  f_mount ( &fs , "0:",  1);
@@ -1068,3 +1081,62 @@
 	  f_mount(0, "0:", 0);
 }
 */
+
+
+void save_map0(const uint8_t bank_preset)
+{
+	FATFS fs;
+	FIL file;
+	UINT f_size;
+	DWORD seek = 32;
+	f_mount ( &fs , "0:",  1);
+	f_open(&file, "/system.pan" , FA_WRITE);
+	f_lseek (&file , seek);
+	f_write(&file, &bank_preset , 1 , &f_size);
+	f_sync(&file);
+	f_close(&file);
+	f_mount(0, "0:", 0);
+}
+
+void load_map0(uint8_t& bank_preset)
+{
+	FATFS fs;
+	FIL file;
+	UINT f_size;
+	DWORD seek = 32;
+	f_mount ( &fs , "0:",  1);
+	f_open(&file, "/system.pan" , FA_READ);
+	f_lseek (&file , seek);
+	f_read(&file, &bank_preset , 1 , &f_size);
+	f_close(&file);
+	f_mount(0, "0:", 0);
+}
+
+void save_map1(const uint8_t bank_preset)
+{
+	FATFS fs;
+	FIL file;
+	UINT f_size;
+	DWORD seek = 33;
+	f_mount ( &fs , "0:",  1);
+	f_open(&file, "/system.pan" , FA_WRITE);
+	f_lseek (&file , seek);
+	f_write(&file, &bank_preset , 1 , &f_size);
+	f_sync(&file);
+	f_close(&file);
+	f_mount(0, "0:", 0);
+}
+
+void load_map1(uint8_t& bank_preset)
+{
+	FATFS fs;
+	FIL file;
+	UINT f_size;
+	DWORD seek = 33;
+	f_mount ( &fs , "0:",  1);
+	f_open(&file, "/system.pan" , FA_READ);
+	f_lseek (&file , seek);
+	f_read(&file, &bank_preset , 1 , &f_size);
+	f_close(&file);
+	f_mount(0, "0:", 0);
+}
Index: application/eepr.h
===================================================================
--- application/eepr.h	(revision 6767)
+++ application/eepr.h	(revision 7321)
@@ -98,5 +98,10 @@
 bool console_fs_preset_load_wav_file_tmp(std::emb_string& err_msg, TReadLine* rl , uint8_t preset);
 bool console_fs_preset_store_wav_file_tmp(std::emb_string& err_msg, TReadLine* rl , uint8_t preset);
 
-void console_dir_wavs_remove(const emb_string& dir_name );
+void console_dir_remove_wavs(const emb_string& dir_name );
 //void console_dir_wavs_info(const emb_string& dir_name, TReadLine* rl);
+
+void save_map0(const uint8_t bank_preset);
+void load_map0(uint8_t& bank_preset);
+void save_map1(const uint8_t bank_preset);
+void load_map1(uint8_t& bank_preset);
Index: application/init.cc
===================================================================
--- application/init.cc	(revision 6767)
+++ application/init.cc	(revision 7321)
@@ -37,7 +37,54 @@
   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_4 | GPIO_Pin_8 | GPIO_Pin_10
 		                        /*| GPIO_Pin_13 | GPIO_Pin_14*/;
   GPIO_Init(GPIOA, &GPIO_InitStructure);
+
+
+	// управление мапами пресетов gpiob pin11
+	  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
+	  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
+	  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
+	  GPIO_Init(GPIOB, &GPIO_InitStructure);
+
+	  EXTI_InitTypeDef exti ;
+	  EXTI_StructInit( &exti);
+	  exti.EXTI_Line = EXTI_Line11 ;
+	  exti.EXTI_Mode = EXTI_Mode_Interrupt ;
+	  exti.EXTI_Trigger = EXTI_Trigger_Rising_Falling ;
+	  exti.EXTI_LineCmd = ENABLE ;
+	  EXTI_Init(&exti);
+
+	  EXTI_ClearFlag(EXTI_Line11);
+
+	  NVIC_InitTypeDef NVIC_InitStructure;
+	  NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn ;
+	  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
+	  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 15;
+	  NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
+	  NVIC_Init( &NVIC_InitStructure );
+	  NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
+
+	  SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOB, EXTI_PinSource11);
+
+
+
 }
+
+extern "C" void EXTI15_10_IRQHandler()
+{
+	EXTI_ClearFlag(EXTI_Line11);
+	static volatile bool fst = true ;
+	if ( fst ) { fst = false; return; }
+
+
+	BaseType_t  HigherPriorityTaskWoken ;
+	const char* cmd = GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_11) ? "um0\r" : "um1\r" ;
+	for ( size_t i = 0 ; i<4 ; i++ )
+	    ConsoleTask->WriteToInputBuffFromISR(  cmd + i ,&HigherPriorityTaskWoken) ;
+
+	portYIELD_FROM_ISR(HigherPriorityTaskWoken);
+}
+
+
 inline unsigned long GetCpuClock(void)
 {
     RCC_ClocksTypeDef rrc ;
Index: application/cs.cc
===================================================================
--- application/cs.cc	(revision 6767)
+++ application/cs.cc	(revision 7321)
@@ -11,18 +11,18 @@
 #define preamp_stage 6
 
 /*
-1.4.4 -> 1.03.01(20220904)
+1.03.01(20220904)
   сбвиг нумерации версий прошивок по просьбе АМТ и Дмитрия
-1.4.3 -> 1.4.4  (20220717)
+1.4.4  (20220717)
   рефакторинг keychk(void)
   автоматизация герерации firmware, имя и версия прошивки теперь снаружи кода в options.mk
-1.4.2 -> 1.4.3 (20220622)
+1.4.3 (20220622)
   перенесены изменения из CP16.PA.V. на 20220622
-1.4.1 -> 1.4.2
+1.4.2
   изменено кодирование bank/preset 2:2 бит в 4:4
-1.4.2 -> 1.03.01
+1.03.01
   изменен порядок нумерации версий (требование Маричева)
-1.03.01   -> 1.03.02
+1.03.02
   исправлены косяги команды cc
   добавлена команда preset_delete_wavs
   удалена команда dcc как частный случай preset_delete_wavs
@@ -30,8 +30,22 @@
   метка раздела пришита к названию устройства
   поправлен/согласован  формат и вывод символов версии прошивки для обоих проектов cp16/cp16_pa
   добавлен функционал вывода размера файлов при обмене - для Димы, чтобы он мог вычислить состояние "прогресс-бара" при записи чтении фалов на файловую систему
-1.03.02   -> 1.04.00
+1.04.00
   процесс портирование на текущий sdk
+1.04.01
+  исправлена утечка памяти в dir_get_wav()
+1.04.02(20230501)
+  исправлена ошибка вызова eeprom.c : console_fs_write_file  : rl->RecvLine(str);  c неиницилизированным полем cdc_io.recv_line
+1.04.03(20230503)
+  задержка в console task, необходимая для сброса данных в TUsbTask по интерфейсу usb при сбросе процессора в команде обновления прошивки
+1.04.05(20240517)
+  добавлен расчет и вывод в консоль уровня громкости в каналах
+1.05.00 (20240925)
+  добавлен функционал map0 и map1
+1.05.01 (20240926)
+  функционал map0 и map1 протянут с селектора на материнской плате(переключатели)
+1.05.02 (20241005)
+  втыкание со стрта map0
 */
 
 const uint8_t ver[] = FIRMWARE_VER ;
@@ -55,6 +69,8 @@
 float __CCM_BSS__ coeff_preamp[preamp_stage * 5];
 float __CCM_BSS__ stage_preamp[preamp_stage * 4];
 
+volatile  float vol_ind_vector[3];
+
 void start_usb(uint8_t type);
 
 TCSTask* CSTask ;
@@ -113,7 +129,6 @@
 
   dsp_run();
 
-
   while(1)
      {
 	    if(!usb_flag)
@@ -132,8 +147,15 @@
 		     NVIC_SystemReset();
 	      }
 
-        // управление приесетами с внешних устройств по средством gpio
-	    keychk();
+
+#ifdef __LA3_MOD__
+	    uint8_t bp ;
+	    load_map0(bp);
+	    decode_preset( bank_pres, bp);
+	    prog_ch();
+#else
+	    keychk();  // управление пресетами с внешних устройств по средством gpio обычных cp16
+#endif
     }
 }
 
@@ -169,6 +191,9 @@
 
 	  c1 = ccl;
 
+	  float avg_in = 0 ;
+	  avg_in += abs((int32_t)(ccl * 8388607.0f));
+
 	  if(prog_data[cab_on] && cab_fl)c1 = ccr;
 
 	  cc_cab = ccr;
@@ -257,6 +282,10 @@
 	  cr = ror16(cr);
 	  init_get_dac_data().left.sample  = cl;
 	  init_get_dac_data().right.sample = cr;
+
+		 // расчет индикации громкости входа
+	  vol_ind_vector[1] += vol_ind_k[0] * ( abs(ccl) * vol_ind_k[2] - vol_ind_vector[1]) ;
+	  vol_ind_vector[2] += vol_ind_k[0] * ( abs(ccr) * vol_ind_k[2] - vol_ind_vector[2]) ;
 }
 void param_set(void)
 {
Index: application/console_cmd_handlers.cc
===================================================================
--- application/console_cmd_handlers.cc	(revision 6767)
+++ application/console_cmd_handlers.cc	(revision 7321)
@@ -628,7 +628,12 @@
 }
 static void get_amtid_command_handler ( TReadLine* rl , TReadLine::const_symbol_type_ptr_t* args , const size_t count )
 {
-	i2hex(2,hex); //CP16
+#ifdef __LA3_MOD__
+	i2hex(5,hex); //PangaeaCP16_RV LA3
+#else
+	i2hex(2,hex); //PangaeaCP16_RV
+#endif
+
 	msg_console("%s" , hex ) ;
 	msg_console("\n") ;
 	msg_console("END\n") ;
@@ -724,7 +729,10 @@
 
 	std::emb_string err_msg  ;
 	if ( console_fs_write_file(err_msg, rl , "0:/firmware"))
-	   NVIC_SystemReset();
+	{
+	    TTask::Delay(100); // задержка, необходимая для сброса данных в TUsbTask по интерфейсу usb
+		NVIC_SystemReset();
+	}
 
 }
 //------------------------------------------------------------------------------
@@ -766,6 +774,7 @@
    msg_console("END\n") ;
 }
 
+//------------------------------------------------------------------------------
 static void preset_wavs_delete_command_handler ( TReadLine* rl , TReadLine::const_symbol_type_ptr_t* args , const size_t count )
 {
 
@@ -782,11 +791,91 @@
   	   decode_preset_dir( arg1, preset_dir_name);
 	}
 
+	console_dir_remove_wavs(preset_dir_name) ;
+
+   msg_console("END\n") ;
+}
+
+#if 0
+
+static void preset_wavs_delete_command_handler ( TReadLine* rl , TReadLine::const_symbol_type_ptr_t* args , const size_t count )
+{
+
+	emb_string preset_dir_name;
+	if ( count==1 ) // удаление в текщем пресете
+    {
+	   uint8_t bpenc = encode_preset( bank_pres[bpf_bank], bank_pres[bpf_preset] );
+	   decode_preset_dir(bpenc, preset_dir_name);
+    }
+	else
+	{
+  	   char* end ;
+  	   uint8_t arg1 = kgp_sdk_libc::strtol ( args[1] , &end, 16 );
+  	   decode_preset_dir( arg1, preset_dir_name);
+	}
+
 	console_dir_wavs_remove(preset_dir_name) ;
 
    msg_console("END\n") ;
 }
 
+#endif
+
+
+static void preset_map0_command_handler ( TReadLine* rl , TReadLine::const_symbol_type_ptr_t* args , const size_t count )
+{
+	if ( count==1 ) // вывод map0
+    {
+		uint8_t bp ;
+		load_map0(bp);
+		i2hex( bp,hex);
+		msg_console("%s\n" , hex ) ;
+    }
+	else // запись map0
+	{
+  	   char* end ;
+  	   uint8_t arg1 = kgp_sdk_libc::strtol ( args[1] , &end, 16 );
+  	   save_map0(arg1);
+	}
+   msg_console("END\n") ;
+}
+
+static void preset_map1_command_handler ( TReadLine* rl , TReadLine::const_symbol_type_ptr_t* args , const size_t count )
+{
+	if ( count==1 ) // вывод map0
+    {
+		uint8_t bp ;
+		load_map1(bp);
+		i2hex( bp,hex);
+		msg_console("%s\n" , hex ) ;
+    }
+	else // запись map1
+	{
+  	   char* end ;
+  	   uint8_t arg1 = kgp_sdk_libc::strtol ( args[1] , &end, 16 );
+  	   save_map1(arg1);
+	}
+   msg_console("END\n") ;
+}
+
+static void use_map0_command_handler ( TReadLine* rl , TReadLine::const_symbol_type_ptr_t* args , const size_t count )
+{
+	uint8_t bp ;
+	load_map0(bp);
+	i2hex( bp,hex);
+	const char* a[2] = {0,hex} ;
+	direct_program_command_handler( rl , a , 2 ) ;
+}
+
+static void use_map1_command_handler ( TReadLine* rl , TReadLine::const_symbol_type_ptr_t* args , const size_t count )
+{
+	uint8_t bp ;
+	load_map1(bp);
+	i2hex( bp,hex);
+	const char* a[2] = {0,hex} ;
+	direct_program_command_handler( rl , a , 2 ) ;
+}
+
 /*
 static void preset_wavs_info_command_handler ( TReadLine* rl , TReadLine::const_symbol_type_ptr_t* args , const size_t count )
 {
@@ -810,6 +899,14 @@
 }
 */
 
+static void ind_in_out_command_handler ( TReadLine* rl , TReadLine::const_symbol_type_ptr_t* args , const size_t count )
+{
+	msg_console("%u\n" , (uint32_t)vsqrt(vol_ind_vector[0])) ;
+	msg_console("%u\n" , (uint32_t)vsqrt(vol_ind_vector[1])) ;
+//	msg_console("%u\n" , (uint32_t)vsqrt(vol_ind_vector[2])) ;
+	msg_console("END\n") ;
+}
+
 void ConsoleSetCmdHandlers(TReadLine* rl)
 {
   SetConsoleCmdDefaultHandlers(rl);
@@ -860,13 +957,25 @@
   rl->AddCommandHandler("pwc", preset_wav_copy_command_handler);
   rl->AddCommandHandler("pws", preset_wav_store_command_handler);
   rl->AddCommandHandler("pwl", preset_wav_load_command_handler);
+  rl->AddCommandHandler("pwsd", preset_wavs_delete_command_handler); // удаляет все *.wav в директории текущего пресета или в том на который указывает параметр
 
+  rl->AddCommandHandler("sm0", preset_map0_command_handler);
+  rl->AddCommandHandler("sm1", preset_map1_command_handler);
+  rl->AddCommandHandler("um0", use_map0_command_handler);
+  rl->AddCommandHandler("um1", use_map1_command_handler);
+
   rl->AddCommandHandler("fsf", fs_format_command_handler);
 //  rl->AddCommandHandler("fsd", fs_delete_command_handler);
+  rl->AddCommandHandler("fwu", fw_update_command_handler);
 
+#if 0
   rl->AddCommandHandler("preset_wavs_delete", preset_wavs_delete_command_handler); // удаляет все *.wav в директории текущего пресета или в том на который указывает параметр
+#endif
+
   //rl->AddCommandHandler("preset_wavs_info",   preset_wavs_info_command_handler);   //
 
+  rl->AddCommandHandler("iio", ind_in_out_command_handler);
+
 }
 
 //------------------------------------------------------------------------------
Index: application/cs.h
===================================================================
--- application/cs.h	(revision 6767)
+++ application/cs.h	(revision 7321)
@@ -65,6 +65,9 @@
 extern float pream_vol;
 extern TCSTask* CSTask ;
 
+constexpr float vol_ind_k[] = { 3e-3f,  2.7e-5f,   1.75e-4f,};
+extern volatile  float vol_ind_vector[3];
+
 float convert ( uint8_t* in );
 extern uint8_t m1_up[];
 extern uint8_t m1_up1[];
